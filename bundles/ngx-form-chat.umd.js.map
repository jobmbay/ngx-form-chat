{"version":3,"file":"ngx-form-chat.umd.js","sources":["../../../projects/ngx-form-chat/src/lib/ngx-form-chat.service.ts","../../../projects/ngx-form-chat/src/lib/ngx-form-chat.component.ts","../../../projects/ngx-form-chat/src/lib/ngx-form-chat.component.html","../../../projects/ngx-form-chat/src/lib/ngx-form-chat.module.ts","../../../projects/ngx-form-chat/src/public-api.ts","../../../projects/ngx-form-chat/src/ngx-form-chat.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFormChatService {\n\n  constructor() { }\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'ngx-form-chat',\n  templateUrl: './ngx-form-chat.component.html',\n  styleUrls: ['./ngx-form-chat.component.css']\n})\nexport class NgxFormChatComponent implements OnInit, AfterViewInit {\n\n  @Input() openChat: any = false;\n  @Input() config: any = {};\n  @Input() data: any = {};\n  @Input() useSession: boolean = true;\n  @Input() restartChatWhenOpen: boolean = false;\n  @Output() onEndChat = new EventEmitter();\n\n  defaultConfig: any = {\n    configuration: {\n        compagny: {\n            logo: \"assets/images/FDT-logo.png\",\n            name: \"Default Company\",\n            logoWidth: \"230px\"\n        },\n        background: \"#eee\",\n        fontSize: \"16px\",\n        chatpanel: {\n            autoopen: false,\n            restartChatWhenOpen: false,\n            useSession: false,\n            buttonColor: \"#FFA800\",\n            position: {\n                width: \"500px\",\n                bottom: \"65px\",\n                height: \"70vh\"\n            }\n        },\n        userInput: {\n            placeholder: \"Your answer here\",\n            buttoncolor: \"#0c2d62\",\n            color: \"#ffffff\"\n        }\n    },\n    chatbot: {\n        name: \"Fatima\",\n        icon: \"assets/images/fatima.png\",\n        background: \"#0c2d62\",\n        color: \"#ffffff\"\n    },\n    user: {\n        name: \"You\",\n        icon: \"assets/images/user.png\",\n        background: \"#FFA800\",\n        color: \"#ffffff\"\n    }\n  }\n\n  chatbotData: any;\n\n  title = 'nx-form-chat';\n  startDate = `${('0' + ((new Date()).getHours())).slice(-2)}:${('0' + ((new Date()).getMinutes() + 1)).slice(-2)}`;\n\n  pushMessageTimer: any;\n  isTyping: Boolean = false;\n  endChat: Boolean = false;\n  currentIndex = 0;\n  isEcrit: Boolean = true;\n  initialWidth = '0px';\n  initialHeight = '0px';\n\n  chatlist: any = [];\n  returnJSON: any = {};\n\n  inputValue: string = '';\n\n  constructor() {\n  };\n\n  ngOnInit(): void {\n    this.startChat();\n  }\n\n\n  startChat() {\n    this.initChatConfig();\n    this.chatbotData.questions = this.data.questions;\n    let _chatInit;\n    let _inputValue;\n    let useSession = this.chatbotData.configuration && this.chatbotData.configuration.chatpanel && this.chatbotData.configuration.chatpanel.useSession === false ? false : true;\n    if (useSession) {\n      _chatInit = sessionStorage.getItem('chatInit');\n      _inputValue = sessionStorage.getItem('inputValue');\n    }\n    else {\n      if (useSession && !this.config.configuration.chatpanel.restartChatWhenOpen) {\n        this.restartChat();\n      }\n    }\n    if (_chatInit && JSON.parse(_chatInit)) {\n      this.getState();\n      if (!this.endChat) {\n        this.continueChat(_inputValue || '');\n      }\n      setTimeout(() => {\n        this.scrollToLastMessage();\n      }, 500)\n    }\n    else {\n      this.pushChat('bot');\n    }\n  }\n\n  initChatConfig() {\n    this.chatbotData = this.config ? this.config : this.defaultConfig;\n  }\n\n  pushChat(user: string) {\n    this.scrollToLastMessage();\n    this.chatlist.push({\n      owner: user,\n      date: `${('0' + ((new Date()).getHours())).slice(-2)}:${('0' + ((new Date()).getMinutes() + 1)).slice(-2)}`,\n      messages: []\n    })\n    this.isTyping = true;\n    setTimeout(() => {\n      this.chatbotData?.questions && this.chatbotData?.questions[this.currentIndex] && this.chatbotData?.questions[this.currentIndex].messageTexts && this.pushMessage(this.chatbotData?.questions[this.currentIndex].messageTexts, 0);\n    }, 1000);\n  }\n\n  saveState(inputValue: string) {\n    let _inputValue: any = inputValue;\n    let _endChat: any = this.endChat;\n    if (this.useSession) { \n      sessionStorage.setItem('chatlist', JSON.stringify(this.chatlist));\n      sessionStorage.setItem('currentIndex', JSON.stringify(this.currentIndex));\n      sessionStorage.setItem('returnJSON', JSON.stringify(this.returnJSON));\n      sessionStorage.setItem('inputValue', _inputValue);\n      sessionStorage.setItem('endChat', _endChat);\n      sessionStorage.setItem('chatInit', JSON.stringify(true));\n    }\n  }\n\n  getState() {\n    let _chatlist: any = sessionStorage.getItem('chatlist');\n    let _currentIndex: any = sessionStorage.getItem('currentIndex');\n    let _returnJSON: any = sessionStorage.getItem('returnJSON');\n    let _endChat: any = sessionStorage.getItem('endChat');\n    this.chatlist = JSON.parse(_chatlist);\n    this.currentIndex = JSON.parse(_currentIndex);\n    this.returnJSON =  JSON.parse(_returnJSON);\n    this.endChat = JSON.parse(_endChat);\n    setTimeout(() => {\n      this.scrollToLastMessage();\n    }, 20);\n  }\n\n  pushMessage(messages: string, index: number) {\n    if (index < messages.length && this.chatlist.length > 0) {\n      let message = this.fitVariables(messages[index], this.chatbotData?.questions[this.currentIndex])\n      this.chatlist[this.chatlist.length -1].messages.push(message);\n      this.scrollToLastMessage();\n      this.pushMessageTimer = setTimeout(() => {\n        this.pushMessage(messages, index+1);\n      }, 1000);\n    }\n    if (index === messages.length -1) {\n      this.isTyping = false;\n    }\n  }\n\n  fitVariables(message: string, chat: any) {\n    if (chat.variables && chat.variables[0]) {\n      chat.variables.forEach((variable: any) => {\n        message = message.replace(variable.cle, this.returnJSON[variable.referenceCode]).trim().replace(/variable.cle/g, this.returnJSON[variable.referenceCode]).trim();\n        message = message.replace(variable.cle, this.returnJSON[variable.referenceCode]);\n      });\n      return message;\n    }\n    else {\n      return message\n    }\n  }\n\n  getAnswer(inputValue: string) {\n    if (this.handleValidation(inputValue)) {\n      this.isEcrit = true;\n      this.chatlist.push({\n        owner: 'user',\n        date: `${('0' + ((new Date()).getHours())).slice(-2)}:${('0' + ((new Date()).getMinutes() + 1)).slice(-2)}`,\n        messages: [\n          inputValue\n        ]\n      });\n      this.chatbotData?.questions && this.chatbotData?.questions[this.currentIndex] && this.chatbotData?.questions[this.currentIndex].code ? this.returnJSON[this.chatbotData?.questions[this.currentIndex].code] = inputValue : null;\n      this.inputValue = \"\";\n      this.saveState(inputValue);\n      this.continueChat(inputValue);\n    }\n    else {\n      this.isEcrit = true;\n      this.chatlist.push({\n        owner: 'user',\n        date: `${('0' + ((new Date()).getHours())).slice(-2)}:${('0' + ((new Date()).getMinutes() + 1)).slice(-2)}`,\n        messages: [\n          inputValue\n        ]\n      });\n      this.inputValue = \"\";\n      this.saveState(inputValue);\n      this.sendError(inputValue);\n    }\n  }\n\n  sendError(inputValue: string) {\n    this.scrollToLastMessage();\n    this.pushChatError('bot');\n    this.isEcrit = this.chatbotData?.questions[this.currentIndex].type === 'text' ? true : false;\n  }\n\n  pushChatError(user: string) {\n    this.scrollToLastMessage();\n    this.chatlist.push({\n      owner: user,\n      date: `${('0' + ((new Date()).getHours())).slice(-2)}:${('0' + ((new Date()).getMinutes() + 1)).slice(-2)}`,\n      messages: []\n    })\n    this.isTyping = true;\n    setTimeout(() => {\n      this.chatbotData?.questions && this.chatbotData?.questions[this.currentIndex] && this.chatbotData?.questions[this.currentIndex].validator && this.chatbotData?.questions[this.currentIndex].validator.messages && this.pushMessage(this.chatbotData?.questions[this.currentIndex].validator.messages, 0);\n    }, 1000);\n  }\n\n  handleValidation(inputValue: string) {\n    if (this.chatbotData?.questions && this.chatbotData?.questions[this.currentIndex] && this.chatbotData?.questions[this.currentIndex].validator) {\n      let validator = this.chatbotData?.questions[this.currentIndex].validator;\n      switch(validator.type) {\n        case 'text': \n          if (validator.min && inputValue.length < validator.min) {\n            return false;\n          }\n          else if (validator.max && inputValue.length > validator.max) {\n            return false;\n          }\n          else if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        case 'number':\n          let numberRegExp = /^[0-9]*$/;\n          if (validator.min && parseFloat(inputValue) < validator.min) {\n            return false;\n          }\n          else if (validator.max && inputValue > validator.max) {\n            return false;\n          }\n          else if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else if(!numberRegExp.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        case 'email':\n          let emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/g;\n          if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else if (!emailRegex.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        case 'date':\n          let dateRegex = /^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$/g;\n          if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else if (!dateRegex.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        case 'time':\n          let timeRegex = /^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/g;\n          if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else if (!timeRegex.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        case 'datetime':\n          let datetimeRegex = /^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d[- /.](0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/g;\n          if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else if (!datetimeRegex.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        case 'url':\n          let urlRegex = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/g;\n          if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else if (!urlRegex.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        case 'phone':\n          let phoneRegex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/g;\n          if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else if (!phoneRegex.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        case 'color':\n          let colorRegex = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/g;\n          if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else if (!colorRegex.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        case 'range':\n          let rangeRegex = /^[0-9]{1,2}$/g;\n          if (validator.min && parseFloat(inputValue) < validator.min) {\n            return false;\n          }\n          else if (validator.max && inputValue > validator.max) {\n            return false;\n          }\n          else if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          else if (!rangeRegex.test(inputValue)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        // case 'select':\n        //   if (validator.regExp && !validator.regExp.test(inputValue)) {\n        //     return false;\n        //   }\n        //   else {\n        //     return true;\n        //   }\n        // case 'radio':\n        //   if (validator.regExp && !validator.regExp.test(inputValue)) {\n        //     return false;\n        //   }\n        //   else {\n        //     return true;\n        //   }\n        // case 'checkbox':\n        //   if (validator.regExp && !validator.regExp.test(inputValue)) {\n        //     return false;\n        //   }\n        //   else {\n        //     return true;\n        //   }\n        // case 'textarea':\n        //   if (validator.min && inputValue.length < validator.min) {\n        //     return false;\n        //   }\n        //   else if (validator.max && inputValue.length > validator.max) {\n        //     return false;\n        //   }\n        //   else if (validator.regExp && !validator.regExp.test(inputValue)) {\n        //     return false;\n        //   }\n        //   else {\n        //     return true;\n        //   }\n        default:\n          if (validator.regExp && !validator.regExp.test(inputValue)) {\n            return false;\n          }\n          return true;\n      }\n    }\n    else {\n      return true;\n    }\n  }\n\n  continueChat(inputValue: string) {\n    this.currentIndex = this.handleSuivant(inputValue);\n    this.scrollToLastMessage();\n    if (this.currentIndex >= 0) {\n      this.pushChat('bot');\n      this.isEcrit = this.chatbotData?.questions[this.currentIndex].type === 'text' ? true : false;\n      if (this.chatbotData?.questions[this.currentIndex].type === 'end') {\n        this.handleFin();\n        this.endChat = true;\n        this.saveState(inputValue);\n      }\n    }\n    else {\n      this.handleFin();\n      this.endChat = true;\n      this.saveState(inputValue);\n    }\n  }\n\n  handleSuivant(inputValue: string) {\n    if (this.chatbotData?.questions && this.chatbotData?.questions[this.currentIndex]) {\n      if (this.chatbotData?.questions[this.currentIndex].type === 'text') {\n        return this.chatbotData?.questions.findIndex((question: any) => question.code === this.chatbotData?.questions[this.currentIndex].next);\n      }\n      else if (this.chatbotData?.questions[this.currentIndex].type === 'option') {\n        let myReponse = this.chatbotData?.questions[this.currentIndex].options.find((reponse: any) => reponse.value === inputValue);\n        return myReponse ? this.chatbotData?.questions.findIndex((question: any) => question.code === myReponse.next) : -1;\n      }\n      else if (this.chatbotData?.questions[this.currentIndex].type === 'end') {\n        this.handleFin();\n        return -1;\n      }\n      else {\n        this.handleFin();\n        return -1;\n      }\n    }\n    this.handleFin();\n    return -1;\n  }\n\n  handleFin() {\n    this.onEndChat.emit(this.returnJSON)\n  }\n\n  handleOpenChat(){\n    this.openChat = !this.openChat;\n    let restartChatWhenOpen = this.chatbotData.configuration && this.chatbotData.configuration.chatpanel && this.chatbotData.configuration.chatpanel.restartChatWhenOpen === true ? true : false;\n    if (restartChatWhenOpen) {\n      this.restartChat();\n      if (!this.openChat) {\n        clearTimeout(this.pushMessageTimer);\n      }\n      else {\n        setTimeout(() => {\n          this.startChat();\n        }, 100)\n      }\n    }\n  }\n\n  restartChat() {\n    this.isTyping = false;\n    this.endChat = false;\n    this.currentIndex = 0;\n    this.isEcrit = true;\n    this.initialWidth = '0px';\n    this.initialHeight = '0px';\n  \n    this.chatlist = [];\n    this.returnJSON = {};\n  \n    this.inputValue = '';\n\n    sessionStorage.removeItem('chatInit');\n    sessionStorage.removeItem('inputValue');\n    sessionStorage.removeItem('chatlist');\n    sessionStorage.removeItem('currentIndex');\n    sessionStorage.removeItem('returnJSON');\n    sessionStorage.removeItem('endChat');\n  }\n\n  ngAfterViewInit(): void {\n    // $('#intiveUsers').modal({\n    //     backdrop: 'static',\n    //     keyboard: false\n    // });\n    this.initialWidth = this.chatbotData?.configuration?.chatpanel?.position?.width;\n    this.initialHeight = this.chatbotData?.configuration?.chatpanel?.position?.height;\n    if(this.chatbotData?.configuration?.chatpanel?.autoopen) {\n      document.getElementById('chat-button')?.click();\n      this.openChat = true;\n    }\n    this.handleSize(screen.width, screen.height);\n    window.addEventListener('resize', (event: any) => {\n    // $(window).resize((event: any) => {\n      let height = event.target.innerHeight;\n      let width = event.target.innerWidth\n      this.handleSize(width, height);\n    });\n  }\n\n  handleSize(width: number, height: number) {\n    if (width < 500) {\n      this.chatbotData.configuration.chatpanel.position.width = (width - 50) + 'px';\n      this.chatbotData.configuration.chatpanel.position.height = '80vh';\n    }\n    else {\n      this.chatbotData.configuration.chatpanel.position.width = this.initialWidth;\n      this.chatbotData.configuration.chatpanel.position.height = this.initialHeight;\n    }\n  }\n\n  scrollToLastMessage() {\n    setTimeout(() => {\n      document.getElementById('chat-body')?.scrollTo(0, 60000);\n    }, 20);\n  }\n}\n","\n<!-- preloader -->\n<!-- <div class=\"preloader\">\n    <img [src]=\"chatbotData?.configuration?.compagny?.logo\" class=\"mylogo\" alt=\"logo\">\n    <p class=\"lead font-weight-bold text-muted my-5\">JubinVille chatboot</p>\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div> -->\n<!-- ./ preloader -->\n\n<div class=\"form-chat-fdt\" style=\"position: fixed; font-family: 'Poppins', Tahoma, Geneva, sans-serif;\">\n  <div class=\"modal-content\" id=\"live-chat\" [ngStyle]=\"{'zIndex': 30000000 ,'width': chatbotData?.configuration?.chatpanel?.position?.width, 'bottom': chatbotData?.configuration?.chatpanel?.position?.bottom, 'display': openChat ? 'block' : 'none'}\">\n    <div class=\"modal-header\" [ngStyle]=\"{'background': chatbotData?.configuration?.background}\">\n        <h5 class=\"modal-title\" [ngStyle]=\"{'paddingBottom': '10px'}\">\n            <img [src]=\"chatbotData?.configuration?.compagny?.logo\" [ngStyle]=\"{'width': chatbotData?.configuration?.compagny?.logoWidth}\" class=\"mylogo\" alt=\"\">\n        </h5>\n        <!-- <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <i class=\"mdi mdi-close\"></i>\n        </button> -->\n    </div>\n    <div class=\"modal-body\" [ngStyle]=\"{'background': chatbotData?.configuration?.background}\">\n  \n  \n        <!-- chat -->\n        <div class=\"chat\" [ngStyle]=\"{'height': chatbotData?.configuration?.chatpanel?.position.height}\"> <!-- no-message -->\n            <div id=\"chat-body\" class=\"chat-body ps ps--active-y\" [ngStyle]=\"{'background': chatbotData?.configuration?.background, 'height': '57vh', 'marginTop': '-20px', 'overflowY': 'scroll'}\">\n                <div class=\"messages\">\n                    \n                    <div *ngFor=\"let chat of chatlist\" [ngStyle]=\"{'width': '100%'}\">\n                        <div *ngIf=\"chat.owner === 'bot'\">\n                            <div class=\"message-item in\">\n                                <div class=\"message-avatar\">\n                                    <figure class=\"avatar avatar-sm avatar-left\">\n                                        <img [src]=\"chatbotData?.chatbot?.icon\" class=\"rounded-circle\" alt=\"image\">\n                                    </figure>\n                                    <div class=\"user-name\">\n                                        <h5>{{chatbotData?.chatbot?.name}}</h5>\n                                        <div class=\"time\">{{chat.date}}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngFor=\"let message of chat.messages\" class=\"message-item in\">\n                                <div class=\"message-content\">\n                                    <div class=\"message-text\" [ngStyle]=\"{'background': chatbotData?.chatbot?.background, color: chatbotData?.chatbot?.color, 'font-size': chatbotData?.configuration?.fontSize}\" [innerHTML]=\"message\"></div>\n                                </div>\n                            </div>\n                        </div>\n  \n                        \n                        <div *ngIf=\"chat.owner === 'user'\">\n                            <div class=\"message-item out\">\n                                <div class=\"message-avatar\">\n                                    <figure class=\"avatar avatar-sm\">\n                                        <img src=\"{{chatbotData?.user?.icon}}\" class=\"rounded-circle\" alt=\"image\">\n                                    </figure>\n                                    <div class=\"user-name\">\n                                        <h5>{{chatbotData?.user?.name}}</h5>\n                                        <div class=\"time\">{{chat.date}} <i class=\"mdi mdi-check-all text-info ml-1\"></i></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngFor=\"let message of chat.messages\" class=\"message-item out\">\n                                <div class=\"message-content\">\n                                    <div class=\"message-text\" [ngStyle]=\"{'background': chatbotData?.user?.background, color: chatbotData?.user?.color, 'font-size': chatbotData?.configuration?.fontSize}\" [innerHTML]=\"message\"></div>\n                                </div>\n                            </div>\n                        </div>\n                        \n                    </div>\n  \n  \n                    <div *ngIf=\"isTyping\" [ngStyle]=\"{'marginTop': '15px'}\" class=\"message-item in in-typing\">\n                        <div class=\"message-content\">\n                            <div class=\"message-text\" [ngStyle]=\"{'font-size': chatbotData?.configuration?.fontSize}\">\n                                <div class=\"writing-animation\">\n                                    <div class=\"writing-animation-line\"></div>\n                                    <div class=\"writing-animation-line\"></div>\n                                    <div class=\"writing-animation-line\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n  \n                    <div id=\"endOfMessages\"></div>\n                    \n                </div>\n            </div>\n            <div class=\"chat-footer\" data-intro-js=\"6\" [ngStyle]=\"{'background': chatbotData?.configuration?.background, 'borderTopColor': chatbotData?.configuration?.userInput.buttoncolor}\">\n                <form class=\"d-flex\" *ngIf=\"isEcrit && !endChat\">\n                    <input type=\"text\" [readonly]=\"endChat\" class=\"form-control form-control-main input-chat\" name=\"textInput\" [(ngModel)]=\"inputValue\" [placeholder]=\"chatbotData?.configuration?.userInput.placeholder\" style=\"outline-width: 0;\">\n                    <div>\n                        <button [disabled]=\"inputValue.length === 0 || isTyping || endChat\" (click)=\"getAnswer(inputValue)\" class=\"btn ml-2 btn-floating\" type=\"submit\" [ngStyle]=\"{'background': chatbotData?.configuration?.userInput.buttoncolor, 'color': chatbotData?.configuration?.userInput.color, 'borderColor': chatbotData?.configuration?.userInput.buttoncolor, 'cursor' : !(inputValue.length === 0 || isTyping || endChat) ? 'pointer' : 'auto'}\">\n                            <!-- <i class=\"fa fa-send\"></i> -->\n                            <!-- ✔ -->\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:svgjs=\"http://svgjs.com/svgjs\" width=\"512\" height=\"512\" x=\"0\" y=\"0\" viewBox=\"0 0 512.001 512.001\" style=\"enable-background:new 0 0 512 512\" xml:space=\"preserve\" class=\"\"><g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                                <g>\n                                  <path d=\"M507.608,4.395c-4.243-4.244-10.609-5.549-16.177-3.321L9.43,193.872c-5.515,2.206-9.208,7.458-9.42,13.395    c-0.211,5.936,3.101,11.437,8.445,14.029l190.068,92.181l92.182,190.068c2.514,5.184,7.764,8.455,13.493,8.455    c0.178,0,0.357-0.003,0.536-0.01c5.935-0.211,11.189-3.904,13.394-9.419l192.8-481.998    C513.156,15.001,511.851,8.638,507.608,4.395z M52.094,209.118L434.72,56.069L206.691,284.096L52.094,209.118z M302.883,459.907    l-74.979-154.599l228.03-228.027L302.883,459.907z\" fill=\"chatbotData?.configuration?.userInput.color\" data-original=\"#000000\" [ngStyle]=\"{'fill':chatbotData?.configuration?.userInput.color}\"></path>\n                                </g>\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              <g xmlns=\"http://www.w3.org/2000/svg\">\n                              </g>\n                              </g></svg>\n                        </button>\n                    </div>\n                </form>\n                <form class=\"d-flex\" *ngIf=\"!isEcrit && !isTyping\" >\n                    <!-- <input type=\"text\" [readonly]=\"endChat\" class=\"form-control form-control-main\" name=\"textInput\" [(ngModel)]=\"inputValue\" [placeholder]=\"chatbotData?.configuration?.userInput.placeholder\"> -->\n                    <div class=\"center\">\n                        <button [innerHTML]=\"reponse.value\" *ngFor=\"let reponse of chatbotData?.questions[this.currentIndex].options\" (click)=\"getAnswer(reponse.value)\" class=\"btn ml-2\" type=\"submit\" [ngStyle]=\"{'background': chatbotData?.configuration?.userInput.buttoncolor, 'color': chatbotData?.configuration?.userInput.color, 'borderColor': chatbotData?.configuration?.userInput.buttoncolor, 'margin': '5px 0px'}\"></button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <!-- ./ chat -->\n  \n  \n    </div>\n  </div>\n  \n  <!-- <a id=\"totop\" href=\"#top\">\n    <i class=\"fa fa-angle-up\"></i>\n  </a> -->\n  \n  <div id=\"totop\" class=\"chat-button-content top-visible\" style=\"z-index: 30000001; height: 0px; position: fixed; bottom: 2px; right: 2px;\">\n    <div class=\"chat-button\" id=\"chat-button\" onclick=\"this.classList.toggle('active');\" (click)=\"handleOpenChat()\" style=\"z-index: 30000001\">\n        <div class=\"background\" [ngStyle]=\"{'background': chatbotData?.configuration?.chatpanel?.buttonColor}\"></div>\n        <svg class=\"chat-bubble\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\">\n          <g class=\"bubble\">\n            <path class=\"line line1\" d=\"M 30.7873,85.113394 30.7873,46.556405 C 30.7873,41.101961\n            36.826342,35.342 40.898074,35.342 H 59.113981 C 63.73287,35.342\n            69.29995,40.103201 69.29995,46.784744\" />\n            <path class=\"line line2\" d=\"M 13.461999,65.039335 H 58.028684 C\n              63.483128,65.039335\n              69.243089,59.000293 69.243089,54.928561 V 45.605853 C\n              69.243089,40.986964 65.02087,35.419884 58.339327,35.419884\" />\n          </g>\n          <circle class=\"circle circle1\" r=\"1.9\" cy=\"50.7\" cx=\"42.5\" />\n          <circle class=\"circle circle2\" cx=\"49.9\" cy=\"50.7\" r=\"1.9\" />\n          <circle class=\"circle circle3\" r=\"1.9\" cy=\"50.7\" cx=\"57.3\" />\n        </svg>\n    </div>\n  </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgxFormChatComponent } from './ngx-form-chat.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxFormChatComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  exports: [\n    NgxFormChatComponent\n  ]\n})\nexport class NgxFormChatModule { }\n","/*\n * Public API Surface of ngx-form-chat\n */\n\nexport * from './lib/ngx-form-chat.service';\nexport * from './lib/ngx-form-chat.component';\nexport * from './lib/ngx-form-chat.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Injectable","EventEmitter","i1","i2","Component","Input","Output","CommonModule","FormsModule","NgModule"],"mappings":"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"}